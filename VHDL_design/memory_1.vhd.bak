
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity memory2 is
    port (
        address : in  std_logic_vector(9 downto 0);
        data_in : in  std_logic_vector(7 downto 0);
	clck : in std_logic;
        w    : in  std_logic;                    
        r    : in  std_logic;                   
        data_out: out std_logic_vector(7 downto 0)
    );
end memory2;

architecture memory_arch of memory2 is
    type memory_array is array (0 to 1023) of std_logic_vector(7 downto 0);
    signal memory : memory_array := (others => (others => '0'));
    signal memory_data : std_logic_vector(7 downto 0);
begin
    process (clck)
    begin
	if (clck'EVENT AND clck='1') then
		if r = '1' then	
            		data_out <= memory(to_integer(unsigned(address)));
        	elsif w = '1' then
        		memory(to_integer(unsigned(address))) <= data_in;
        	end if;
	end if;
    end process;
end memory_arch ;
